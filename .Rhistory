install.packages("sp")
library(sp)
getClass("Spatial")
getClass("Spatial")
library(sp)
read.table("CRAN051001a.txt")
Cran_df<-read.table("http://www.asdar-book.org/datasets/CRAN051001a.txt", header = TRUE)
head(Cran_df)
#| cache: true
df<-read.table("http://www.asdar-book.org/datasets/CRAN051001a.txt", header = TRUE)
head(df)
#| cache: true
df <- read.table("http://www.asdar-book.org/datasets/CRAN051001a.txt", header = TRUE)
head(df)
cran_mat <- cbind(df$long, df$lat)
cran_mat
# assign row names
row.names(cran_mat) <- 1:nrow(cran_mat)
cran_mat
# view the matrix
str(cran_mat)
getClass("SpatialPoints")
library(sp)
getClass("SpatialPoints")
getClass("Spatial")
summary("SpatialPoints")
summary(class("SpatialPoints"))
getClass("CRS")
# make a CRS object
CRS_obj <- CRS(projargs = "+proj=longlat +ellps=WGS84")
# make a CRS object
CRS_obj <- CRS(projargs = "+proj=longlat +ellps=WGS84")
?CRS()
summary(CRS_obj)
# check summary of the object
summary(CRS_obj)
cran_sp <- SpatialPoints(coords = cran_mat, proj4string = CRS_obj)
summary(cran_sp)
# summary of the cran_sp object
summary(cran_sp)
getwd()
knitr::include_graphics("/home/muhammad/Stats-Dev/Repositories/Blogs/Spatial-Analytics-2/FourClusters.png")
getwd()
setwd("~/Stats-Dev/Repositories/Blogs/Spatial-Analytics-2")
knitr::include_graphics("/home/muhammad/Stats-Dev/Repositories/Blogs/Spatial-Analytics-2/points.png")
knitr::include_graphics("/home/muhammad/Stats-Dev/Repositories/Blogs/Spatial-Analytics-2/points.jpg")
#| cache: true
df <- read.table("http://www.asdar-book.org/datasets/CRAN051001a.txt", header = TRUE)
View(df)
head(df)
# make a latitude and longitude matrix
cran_mat <- cbind(df$long, df$lat)
# assign row names from 1 to number of rows
row.names(cran_mat) <- 1:nrow(cran_mat)
# view the matrix structure
str(cran_mat)
# make a CRS object in longlat and World Geodetic System(WGS84)
CRS_obj <- CRS(projargs = "+proj=longlat +ellps=WGS84")
library(sp)
# make a CRS object in longlat and World Geodetic System(WGS84)
CRS_obj <- CRS(projargs = "+proj=longlat +ellps=WGS84")
# make a spatial points class by long/lat matrix and proj4string
cran_sp <- SpatialPoints(coords = cran_mat, proj4string = CRS_obj)
bbox(cran_sp)
proj4string(cran_sp)
?proj4string
cran_mat
For extraction of spatial coordinates, I use coordinates() method. I use indices to subset CRAN mirrors located in Brazil in 2005:
# select indices of Brazil from data frame object
brazil <- which(df$loc == "Brazil")
# pring the indices
brazil
coordinates(cran_sp)
coordinates(cran_sp)[brazil,1]
coordinates(cran_sp)[brazil,]
1
coordinates(cran_sp)[brazil,1]
coordinates(cran_sp)[brazil, ]
coordinates(cran_sp)[brazil, 2]
coordinates(cran_sp)[brazil, 1:2]
coordinates(cran_sp)[brazil_indices,]
# select indices of Brazil from data frame object
brazil_indices <- which(df$loc == "Brazil")
# print the indices
brazil_indices
coordinates(cran_sp)[brazil_indices,]
summary(cran_sp)[brazil_indices]
summary(cran_sp)[brazil_indices,]
CRAN_sp[brazil, ]
cran_sp[brazil, ]
summary(CRAN_sp[brazil, ])
summary(cran_sp[brazil, ])
summary(cran_sp[brazil, ])
summary(cran_sp[brazil, ])
summary(cran_sp[brazil_indices, ])
# make a CRS object in longlat and World Geodetic System(WGS84)
CRS_obj <- CRS(projargs = "+proj=longlat +ellps=WGS84")
# make a CRS object in longlat and World Geodetic System(WGS84)
CRS_obj <- CRS(projargs = "+proj=longlat +ellps=WGS84")
# make a CRS object in longlat and World Geodetic System(WGS84)
CRS_obj <- CRS(projargs = "+proj=longlat +ellps=WGS84")
cran_spcran_df <- SpatialPointsDataFrame(coords = cran_mat, data = cran_df,
proj4string = 11CRS)
cran_spcran_df <- SpatialPointsDataFrame(coords = cran_mat, data = cran_df,
proj4string = llCRS, match.ID = TRUE)
#| cache: true
cran_df <- read.table("http://www.asdar-book.org/datasets/CRAN051001a.txt", header = TRUE)
head(cran_df)
cran_spcran_df <- SpatialPointsDataFrame(coords = cran_mat, data = cran_df,
proj4string = llCRS, match.ID = TRUE)
library(sp)
cran_spcran_df <- SpatialPointsDataFrame(coords = cran_mat, data = cran_df,
proj4string = llCRS, match.ID = TRUE)
cran_spcran_df <- SpatialPointsDataFrame(coords = cran_mat, data = cran_df,
match.ID = TRUE)
cran_sp_df <- SpatialPointsDataFrame(coords = cran_mat, data = cran_df,
match.ID = TRUE)
summary(cran_sp_df)
cran_sp_df <- SpatialPointsDataFrame(coords = cran_mat, data = cran_df,
proj4string = CRS_obj, match.ID = TRUE)
summary(cran_sp_df)
data.frame()
?data.frame()
summary(cran_sp_df)
str(cran_sp_df)
str(CRAN_spdf1$loc)
str(cran_sp_df1$loc)
str(cran_sp_df$loc)
cran_mat
cran_df
cran_sp_df
View(cran_sp_df)
cran_sp_df@coords
cran_sp_df@bbox
cran_sp_df@coords.nrs
cran_sp_df@data
cran_sp_df@coords.nrs
cran_sp_df@coords
cran_sp_df@bbox
```{r}
![Spatial points classes and their slots; arrows show subclass extensions](spatial.png)
getclass(SpatialPointsDataFrame())
getclass(SpatialPointsDataFrame)
getclass("SpatialPointsDataFrame")
getClass("SpatialPointsDataFrame")
?SpatialPointsDataFrame
cran_sp_df@coords.nrs
coordinates(cran_sp_df)
# select indices of Brazil from data frame object
brazil_indices <- which(cran_df$loc == "Brazil")
# print the indices
brazil_indices
